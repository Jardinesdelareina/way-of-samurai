{"version":3,"file":"static/js/41.8a9d7a92.chunk.js","mappings":"sMACA,EAA0B,yB,0DCA1B,EAA2B,2BAA3B,EAAwE,kCAAxE,EAAmH,yBAAnH,EAAsJ,0BAAtJ,EAA2L,2BAA3L,EAAuO,iC,SCKjOA,GAAYC,EAAAA,EAAAA,IAAiB,KAE7BC,EAAc,SAACC,GACnB,OACE,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,KAChB,gBAAKD,UAAWC,EAAhB,SAA6BF,EAAMG,gBAuCrCC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EAhBL,SAACL,GACtB,OACE,0BACE,kBAAMC,UAAWC,EAAkBK,SAAUP,EAAMQ,aAAnD,WACE,SAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXC,KAAK,iBACLC,YAAY,0GACZC,SAAU,CAACC,EAAAA,GAAUlB,MAEvB,+FAQR,EAnCiB,SAACG,GAEhB,IAIIgB,EAAiBhB,EAAMiB,YAAYC,KAAI,SAACC,GAAD,OACzC,SAACpB,EAAD,CAAwBI,QAASgB,EAAEhB,SAAjBgB,EAAEC,OAEtB,OACE,iBAAKnB,UAAWC,EAAhB,UACGc,GACD,SAACZ,EAAD,CAAqBG,SAVL,SAACc,GACnBrB,EAAMsB,WAAWD,EAAOE,uBCP5B,GAF0BC,EAAAA,EAAAA,KANF,SAACC,GACvB,MAAO,CACLR,YAAaQ,EAAMC,YAAYT,eAIgB,CAACK,WAAAA,EAAAA,GAA1BE,CAAwCG,GCZlE,EAAwB,qBAAxB,EAA2D,2BAA3D,EAAkG,yBAAlG,EAAwI,0B,UCGlIC,EAAW,SAAC5B,GAChB,IAAI6B,EAAO,YAAc7B,EAAMY,KAC/B,OACE,UAAC,KAAD,CAASkB,GAAID,EAAM5B,UAAWC,EAA9B,WACE,gBAAKD,UAAWC,KAChB,gBAAKD,UAAWC,EAAhB,SAA+BF,EAAMY,WAY3C,EAPc,SAACZ,GACb,IAAI+B,EAAc/B,EAAMgC,SAASd,KAAI,SAACe,GAAD,OACnC,SAACL,EAAD,CAAUR,GAAIa,EAAEb,GAAIR,KAAMqB,EAAErB,UAE9B,OAAO,gBAAKX,UAAWC,EAAhB,SAA0B6B,KCEnC,GAFuBP,EAAAA,EAAAA,KAZC,SAACC,GACvB,MAAO,CACLO,SAAUP,EAAMC,YAAYM,aAIL,SAACE,GAC1B,MAAO,KAKcV,CAA8CW,GCHrE,EAVgB,SAACnC,GAEf,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,Q,oBCJAkC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAIH,OAJGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAEF,WACI,OAAQ,SAAC,EAAD,QACb,EAJGA,CAAyBC,EAAAA,WAW/B,GAAeC,EAAAA,EAAAA,IAASC,EAAAA,GAAkBf,EAAAA,EAAAA,KAJpB,SAACC,GAAD,MAAY,CAC9BC,YAAaD,EAAMC,gBAGvB,CAAoEU","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.scss?d037","webpack://my-app/./src/components/Dialogs/Messages/Messages.module.scss?4b9e","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","webpack://my-app/./src/components/Dialogs/Names/Names.module.scss?fbf0","components/Dialogs/Names/Names.jsx","components/Dialogs/Names/NamesContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__3VRZh\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__o97tK\",\"messages__posts\":\"Messages_messages__posts__Uzv-c\",\"myPost\":\"Messages_myPost__4CkJL\",\"my__ava\":\"Messages_my__ava__pJY2n\",\"my__text\":\"Messages_my__text__INNk5\",\"messages__form\":\"Messages_messages__form__XI3Xp\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./Messages.module.scss\";\r\n\r\nconst maxLength = maxLengthCreator(100);\r\n\r\nconst MessageItem = (props) => {\r\n  return (\r\n    <div className={s.messages__posts}>\r\n      <div className={s.myPost}>\r\n        <div className={s.my__ava}></div>\r\n        <div className={s.my__text}>{props.message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages = (props) => {\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageBody)\r\n  }\r\n\r\n  let elementMessage = props.messageData.map((m) => (\r\n    <MessageItem key={m.id} message={m.message} />\r\n  ));\r\n  return (\r\n    <div className={s.messages}>\r\n      {elementMessage}\r\n      <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form className={s.messages__form} onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Напишите сообщение\"\r\n          validate={[required, maxLength]}\r\n        />\r\n        <button>Отправить</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"dialogs\" })(AddMessageForm);\r\n\r\nexport default Messages;","import { connect } from \"react-redux\";\r\nimport {\r\n  addMessage\r\n} from \"../../../redux/dialogsReducer\";\r\nimport Messages from \"./Messages\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messageData: state.dialogsPage.messageData\r\n  }\r\n};\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {addMessage}) (Messages);\r\n\r\nexport default MessagesContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"names\":\"Names_names__+r4eB\",\"names__item\":\"Names_names__item__Xo49e\",\"item__ava\":\"Names_item__ava__kdms7\",\"item__name\":\"Names_item__name__YNeSs\"};","import React from \"react\";\r\nimport s from \"./Names.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NameItem = (props) => {\r\n  let path = \"/dialogs/\" + props.name;\r\n  return (\r\n    <NavLink to={path} className={s.names__item}>\r\n      <div className={s.item__ava}></div>\r\n      <div className={s.item__name}>{props.name}</div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nconst Names = (props) => {\r\n  let elementName = props.nameData.map((n) => (\r\n    <NameItem id={n.id} name={n.name} />\r\n  ));\r\n  return <div className={s.names}>{elementName}</div>;\r\n};\r\n\r\nexport default Names;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Names from \"./Names\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    nameData: state.dialogsPage.nameData\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n  }\r\n};\r\n\r\nconst NamesContainer = connect(mapStateToProps, mapDispatchToProps) (Names)\r\n\r\nexport default NamesContainer;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport NamesContainer from \"./Names/NamesContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <NamesContainer />\r\n      <MessagesContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    render() {\r\n        return (<Dialogs />)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage\r\n});\r\n\r\nexport default compose( withAuthRedirect, connect(mapStateToProps))(DialogsContainer);"],"names":["maxLength","maxLengthCreator","MessageItem","props","className","s","message","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","elementMessage","messageData","map","m","id","values","addMessage","newMessageBody","connect","state","dialogsPage","Messages","NameItem","path","to","elementName","nameData","n","dispatch","Names","DialogsContainer","React","compose","withAuthRedirect"],"sourceRoot":""}