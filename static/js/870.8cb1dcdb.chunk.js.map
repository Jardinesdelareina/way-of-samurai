{"version":3,"file":"static/js/870.8cb1dcdb.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.scss?4008","webpack://my-app/./src/components/Profile/User/User.module.scss?cbf5","webpack://my-app/./src/components/Profile/User/UserStatus.module.scss?c4e9","components/Profile/User/UserStatus.jsx","components/Profile/User/User.jsx","webpack://my-app/./src/components/Profile/Post/Post.module.scss?9fff","components/Profile/Post/Post.jsx","components/Profile/Post/PostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__DeQqA\"};","// extracted by mini-css-extract-plugin\nexport default {\"user__image\":\"User_user__image__oAfiy\",\"user__description\":\"User_user__description__3izzp\",\"user__ava\":\"User_user__ava__f2sat\",\"user__info\":\"User_user__info__T7Hc2\",\"info__name\":\"User_info__name__-u8xa\",\"info__twitter\":\"User_info__twitter__0+Rbj\",\"info__instagram\":\"User_info__instagram__660ng\",\"info__github\":\"User_info__github__ezlJN\",\"user__about\":\"User_user__about__G-4th\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"UserStatus_status__IZaji\",\"status__text\":\"UserStatus_status__text__5chOO\",\"status__input\":\"UserStatus_status__input__QEuMz\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./UserStatus.module.scss\";\r\n\r\nconst UserStatus = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div className={s.status}>\r\n        {!editMode &&\r\n          <div className={s.status__text} onDoubleClick={activateEditMode}>{props.status  || \"Статус\"}</div>\r\n        }\r\n        {editMode &&\r\n          <div className={s.status__input}>\r\n            <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} />\r\n          </div>\r\n        }\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default UserStatus;","import React from \"react\";\r\nimport s from \"./User.module.scss\";\r\nimport Preloader from \"./../../common/Preloader/Preloader\";\r\nimport userAva from \"./../../../assets/images/ava.png\";\r\nimport UserStatus from \"./UserStatus\";\r\n\r\nconst User = ({ profile, status, updateStatus}) => {\r\n\r\n  if (!profile) {\r\n    return (<Preloader />)\r\n  }\r\n\r\n  return (\r\n    <div className={s.user}>\r\n      <div className={s.user__description}>\r\n        <div className={s.user__ava}>\r\n          <img src={profile.photos.large != null ? profile.photos.large : userAva} />\r\n        </div>\r\n        <div className={s.user__info}>\r\n          <div className={s.info__name}>{profile.fullName}</div>\r\n          <div className={s.info__twitter}>{profile.contacts.twitter}</div>\r\n          <div className={s.info__instagram}>{profile.contacts.instagram}</div>\r\n          <div className={s.info__github}>{profile.contacts.github}</div>\r\n        </div>\r\n        <div className={s.user__about}>\r\n          <UserStatus status={status} updateStatus={updateStatus} /> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile__post\":\"Post_profile__post__Oqsh+\",\"post__form\":\"Post_post__form__fqKdW\",\"post__post\":\"Post_post__post__UVLuz\",\"post__ava\":\"Post_post__ava__+X7Eg\",\"post__message\":\"Post_post__message__7gsZi\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./Post.module.scss\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst PostItem = (props) => {\r\n  return (\r\n    <div className={s.post__post}>\r\n      <div className={s.post__ava}></div>\r\n      <div className={s.post__message}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = React.memo(props => {\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n  \r\n  let elementPost = [...props.myPost].reverse().map((p) => (\r\n    <PostItem key={p.id} message={p.message} />\r\n  ));\r\n  return (\r\n    <div className={s.profile__post}>\r\n      <AddPostReduxForm onSubmit={addNewPost}/>\r\n      <div>{elementPost}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form className={s.post__form} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        placeholder=\"Напишите сообщение\"\r\n        validate={[required, maxLength]}\r\n      />\r\n      <button>Отправить</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"profilePost\" })(AddPostForm);\r\n\r\nexport default Post;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addPost\r\n} from \"./../../../redux/profileReducer\";\r\nimport Post from \"./Post\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myPost: state.profilePage.myPost\r\n  }\r\n}\r\n\r\nconst PostContainer = connect(mapStateToProps, {addPost}) (Post)\r\n\r\nexport default PostContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.scss\";\r\nimport User from \"./User/User\";\r\nimport PostContainer from \"./Post/PostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <User\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <PostContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"./../../redux/profileReducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { useMatch } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match\r\n      ? this.props.match.params.userId\r\n      : 22343;\r\n    /* if (!userId) {  \r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n          this.props.history.push(\"/login\"); \r\n      }\r\n    } */\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (<Profile\r\n      {...this.props}\r\n      profile={this.props.profile}\r\n      status={this.props.status}\r\n      updateStatus={this.props.updateStatus}\r\n    />)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  auth: state.auth.isAuth,\r\n});\r\n\r\nconst ProfileMatch = (props) => {\r\n\tlet match = useMatch(\"/profile/:userId\");\r\n\treturn (\r\n\t\t<ProfileContainer {...props} match={match} />\r\n\t)\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), withAuthRedirect)(ProfileMatch);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","src","photos","large","userAva","fullName","contacts","twitter","instagram","github","Preloader","maxLength","maxLengthCreator","PostItem","message","Post","React","elementPost","myPost","reverse","map","p","id","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","ProfileContainer","userId","this","match","params","getUserProfile","getStatus","compose","autorizedUserId","auth","isAuth","withAuthRedirect","useMatch"],"sourceRoot":""}